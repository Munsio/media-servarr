name: 'Release'

on:
  push:
    branches:
      - 'main'
    paths:
      - 'charts/**/Chart.yaml'

jobs:
  package:
    permissions:
      contents: 'write' # to push chart release and create a release (helm/chart-releaser-action)

    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout Code'
        uses: 'actions/checkout@v4'

      - name: 'Fetch history'
        run: 'git fetch --prune --unshallow'

      - name: 'Configure Git'
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: 'Set up Helm'
        uses: 'azure/setup-helm@v3.5'
        with:
          version: 'v3.12.0'

      - name: 'Prepare packaging'
        run: |
          #!/bin/sh
          # Fetch current index.yaml
          CR_INDEX_DIR=.cr-index
          mkdir "$CR_INDEX_DIR"
          make pre-fetch DIST="$CR_INDEX_DIR"

      - name: 'Run chart-releaser'
        uses: 'helm/chart-releaser-action@v1.7.0'
        with:
          skip_upload: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_GENERATE_RELEASE_NOTES: true
          CR_SKIP_EXISTING: true

      - name: 'Move to upload path'
        run: |
          mkdir -p ./dist/charts
          mv .cr-release-packages/* ./dist/charts
          make pre-fetch && make index
          ls -R ./dist/

      - name: 'Upload Packaged Charts as Artifacts'
        uses: 'actions/upload-artifact@v4'
        with:
          name: 'dist'
          path: 'dist/'

  deploy:
    runs-on: 'ubuntu-latest'
    needs: ['package']
    steps:
      - uses: 'actions/checkout@v4'
      - name: 'Download Packaged Charts'
        uses: 'actions/download-artifact@v4'
        with:
          name: 'dist'
          path: 'dist'
      - name: 'Configure AWS Credentials'
        uses: 'aws-actions/configure-aws-credentials@v4'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
      - name: 'Upload new packages'
        run: |
          aws s3 cp ./dist/charts s3://media-servarr-helm-chart--mediaservarrhelmcharts3b-b6yezrsb3jje/charts --recursive
      - name: 'Invalidate CloudFront Distribution for index.yaml'
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/charts/index.yaml"
